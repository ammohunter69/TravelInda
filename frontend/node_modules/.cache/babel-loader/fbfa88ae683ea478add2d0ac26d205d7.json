{"ast":null,"code":"var _jsxFileName = \"/home/ironman/Documents/project/Travelindia/frontend/src/components/Places.js\",\n    _s = $RefreshSig$();\n\n// this component show details about all the places in a perticular state\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listStateDetails } from \"../redux/stateActions\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles, CircularProgress, Button, Typography } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\"; // import { Link } from \"react-router-dom\";\n\nimport ImageCard from \"./ImageCard\";\nimport categoryData from \"../category/categoryData\"; // import useWindowPosition from \"../hook/useWindowPosition\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      flexDirection: \"column\"\n    }\n  },\n  control: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    // position: \"fixed\",\n    padding: \"1px\",\n    color: \"transparent\"\n  },\n  formControl: {\n    minWidth: 120,\n    // fontcolor: \"white\",\n    background: \"#83c5be\",\n    borderRadius: \"3px\",\n    marginTop: \"5rem\"\n  },\n  buttonControl: {\n    marginTop: \"5rem\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  dropdown: {// padding: \"3rem\",\n  }\n}));\n\nconst Places = ({\n  match\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [timer, setTimer] = useState(false); //state variable for category\n\n  const [category, setCategory] = React.useState(\"\"); //updating category with input value\n\n  const handleChange = event => {\n    setCategory(event.target.value);\n  }; //for in transition\n\n\n  setTimeout(() => {\n    setTimer(true);\n  }, 500);\n  let stateDetials;\n  useEffect(() => {\n    //dispatching action to get all place details in a particular state\n    dispatch(listStateDetails(match.params.id));\n  }, [stateDetials]); // }, [dispatch]);\n  //getting all place details from the store\n\n  stateDetials = useSelector(state => state.stateDetials);\n  let {\n    loading,\n    error,\n    states\n  } = stateDetials;\n  let filteredPlaces;\n\n  if (!loading) {\n    let places = states.places;\n    filteredPlaces = places.filter(place => {\n      if (category == \"\") {\n        return true;\n      } else if (category !== \"\" && category == place.category) {\n        return true;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/states`,\n        style: {\n          color: \"inherit\",\n          textDecoration: \"inherit\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.buttonControl,\n          children: \"Go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"filled\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-outlined-label\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: category,\n          onChange: handleChange,\n          label: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), categoryData.map((data, i) => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: data,\n              children: data\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MuiAlert, {\n        severity: \"error\",\n        children: [error, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        id: \"places\",\n        children: filteredPlaces.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          style: {\n            color: \"white\"\n          },\n          children: \"No data found. Please try another category.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this) : // states.places.map((place) => (\n        filteredPlaces.map(place => /*#__PURE__*/_jsxDEV(ImageCard, {\n          place: place,\n          checked: true,\n          goto: \"PlacesDetails\",\n          stateId: states._id\n        }, place._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Places, \"XOuwf9N5n9tu/XWKKnNjIUTcVUU=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Places;\nexport default Places; // return (\n//   <>\n//     <div>\n//       <FormControl variant=\"filled\" className={classes.formControl}>\n//         <InputLabel id=\"demo-simple-select-outlined-label\">\n//           category\n//         </InputLabel>\n//         <Select value={category} onChange={handleChange} label=\"category\">\n//           <MenuItem value=\"\">\n//             <em>None</em>\n//           </MenuItem>\n//           <MenuItem value={\"Sea\"}>Sea</MenuItem>\n//           <MenuItem value={\"Temple\"}>Temple</MenuItem>\n//           <MenuItem value={\"Forrest\"}>Forrest</MenuItem>\n//           <MenuItem value={\"Hill\"}>Hill</MenuItem>\n//           <MenuItem value={\"Valley\"}>Valley</MenuItem>\n//           <MenuItem value={\"Mountain\"}>Mountain</MenuItem>\n//           <MenuItem value={\"Historical\"}>Historical</MenuItem>\n//         </Select>\n//       </FormControl>\n//     </div>\n//     {/* <CardTest /> */}\n//     <div className={classes.root}>\n//       {loading ? (\n//         <CircularProgress />\n//       ) : error ? (\n//         <MuiAlert severity=\"error\">{error}!</MuiAlert>\n//       ) : (\n//         <div className={classes.root} id=\"places\">\n//           {\n//             // states.places.map((place) => (\n//             filteredPlaces.map((place) => (\n//               <ImageCard\n//                 key={place._id}\n//                 place={place}\n//                 checked={true}\n//                 goto={\"PlacesDetails\"}\n//                 stateId={states._id}\n//               />\n//             ))\n//           }\n//         </div>\n//       )}\n//     </div>\n//   </>\n// );\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["/home/ironman/Documents/project/Travelindia/frontend/src/components/Places.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","listStateDetails","InputLabel","MenuItem","FormControl","Select","makeStyles","CircularProgress","Button","Typography","MuiAlert","ImageCard","categoryData","useStyles","theme","root","minHeight","display","flexWrap","justifyContent","alignItems","breakpoints","down","flexDirection","control","padding","color","formControl","minWidth","background","borderRadius","marginTop","buttonControl","selectEmpty","spacing","dropdown","Places","match","classes","dispatch","timer","setTimer","category","setCategory","handleChange","event","target","value","setTimeout","stateDetials","params","id","state","loading","error","states","filteredPlaces","places","filter","place","textDecoration","map","data","i","length","_id"],"mappings":"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","sourcesContent":["// this component show details about all the places in a perticular state\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listStateDetails } from \"../redux/stateActions\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  makeStyles,\n  CircularProgress,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n// import { Link } from \"react-router-dom\";\nimport ImageCard from \"./ImageCard\";\nimport categoryData from \"../category/categoryData\";\n// import useWindowPosition from \"../hook/useWindowPosition\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  control: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    // position: \"fixed\",\n    padding: \"1px\",\n    color: \"transparent\",\n  },\n  formControl: {\n    minWidth: 120,\n    // fontcolor: \"white\",\n    background: \"#83c5be\",\n    borderRadius: \"3px\",\n    marginTop: \"5rem\",\n  },\n  buttonControl: {\n    marginTop: \"5rem\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  dropdown: {\n    // padding: \"3rem\",\n  },\n}));\n\nconst Places = ({ match }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [timer, setTimer] = useState(false);\n\n  //state variable for category\n  const [category, setCategory] = React.useState(\"\");\n\n  //updating category with input value\n  const handleChange = (event) => {\n    setCategory(event.target.value);\n  };\n\n  //for in transition\n  setTimeout(() => {\n    setTimer(true);\n  }, 500);\n  let stateDetials;\n\n  useEffect(() => {\n    //dispatching action to get all place details in a particular state\n    dispatch(listStateDetails(match.params.id));\n  }, [stateDetials]);\n  // }, [dispatch]);\n\n  //getting all place details from the store\n  stateDetials = useSelector((state) => state.stateDetials);\n  let { loading, error, states } = stateDetials;\n  let filteredPlaces;\n\n  if (!loading) {\n    let places = states.places;\n    filteredPlaces = places.filter((place) => {\n      if (category == \"\") {\n        return true;\n      } else if (category !== \"\" && category == place.category) {\n        return true;\n      }\n    });\n  }\n\n  return (\n    <>\n      <div className={classes.control}>\n        <Link\n          to={`/states`}\n          style={{ color: \"inherit\", textDecoration: \"inherit\" }}\n        >\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.buttonControl}\n          >\n            Go back\n          </Button>\n        </Link>\n        <FormControl variant=\"filled\" className={classes.formControl}>\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            Category\n          </InputLabel>\n          <Select value={category} onChange={handleChange} label=\"category\">\n            <MenuItem value=\"\">\n              <em>All</em>\n            </MenuItem>\n            {categoryData.map((data, i) => {\n              return (\n                <MenuItem key={i} value={data}>\n                  {data}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      </div>\n\n      {/* <CardTest /> */}\n      <div className={classes.root}>\n        {loading ? (\n          <CircularProgress />\n        ) : error ? (\n          <MuiAlert severity=\"error\">{error}!</MuiAlert>\n        ) : (\n          <div className={classes.root} id=\"places\">\n            {filteredPlaces.length === 0 ? (\n              <Typography gutterBottom variant=\"h5\" style={{ color: \"white\" }}>\n                No data found. Please try another category.\n              </Typography>\n            ) : (\n              // states.places.map((place) => (\n              filteredPlaces.map((place) => (\n                <ImageCard\n                  key={place._id}\n                  place={place}\n                  checked={true}\n                  goto={\"PlacesDetails\"}\n                  stateId={states._id}\n                />\n              ))\n            )}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Places;\n\n// return (\n//   <>\n//     <div>\n//       <FormControl variant=\"filled\" className={classes.formControl}>\n//         <InputLabel id=\"demo-simple-select-outlined-label\">\n//           category\n//         </InputLabel>\n//         <Select value={category} onChange={handleChange} label=\"category\">\n//           <MenuItem value=\"\">\n//             <em>None</em>\n//           </MenuItem>\n//           <MenuItem value={\"Sea\"}>Sea</MenuItem>\n//           <MenuItem value={\"Temple\"}>Temple</MenuItem>\n//           <MenuItem value={\"Forrest\"}>Forrest</MenuItem>\n//           <MenuItem value={\"Hill\"}>Hill</MenuItem>\n//           <MenuItem value={\"Valley\"}>Valley</MenuItem>\n//           <MenuItem value={\"Mountain\"}>Mountain</MenuItem>\n//           <MenuItem value={\"Historical\"}>Historical</MenuItem>\n//         </Select>\n//       </FormControl>\n//     </div>\n\n//     {/* <CardTest /> */}\n//     <div className={classes.root}>\n//       {loading ? (\n//         <CircularProgress />\n//       ) : error ? (\n//         <MuiAlert severity=\"error\">{error}!</MuiAlert>\n//       ) : (\n//         <div className={classes.root} id=\"places\">\n//           {\n//             // states.places.map((place) => (\n//             filteredPlaces.map((place) => (\n//               <ImageCard\n//                 key={place._id}\n//                 place={place}\n//                 checked={true}\n//                 goto={\"PlacesDetails\"}\n//                 stateId={states._id}\n//               />\n//             ))\n//           }\n//         </div>\n//       )}\n//     </div>\n//   </>\n// );\n"]},"metadata":{},"sourceType":"module"}