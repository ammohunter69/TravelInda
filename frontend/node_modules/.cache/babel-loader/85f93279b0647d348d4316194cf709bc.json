{"ast":null,"code":"import { STATE_LIST_REQUEST, STATE_LIST_SUCCESS, STATE_LIST_FAIL, STATE_DETAILS_REQUEST, STATE_DETAILS_SUCCESS, STATE_DETAILS_FAIL } from \"../constants/stateConstants\";\nimport axios from \"axios\";\nexport const listStates = () => async dispatch => {\n  try {\n    dispatch({\n      type: STATE_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/states\");\n    dispatch({\n      type: STATE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: STATE_LIST_FAIL,\n      payload: error.message && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listStateDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: STATE_DETAILS_REQUEST,\n      payload: {}\n    }); // const { data } = await axios.get(\"/api/states\");\n\n    const {\n      data\n    } = await axios.get(`/api/states/${id}`); // console.log(`the data is ${JSON.stringify(data)}`);\n    // console.log(`the data is ${data1.places}`);\n    // const data = data1;\n\n    dispatch({\n      type: STATE_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: STATE_DETAILS_FAIL,\n      payload: error.response.data.message // error.message && error.response.data.message\n      //   ? error.response.data.message\n      //   : error.message,\n\n    });\n  }\n};","map":{"version":3,"sources":["/home/ironman/Documents/project/Travelindia/frontend/src/actions/stateActions.js"],"names":["STATE_LIST_REQUEST","STATE_LIST_SUCCESS","STATE_LIST_FAIL","STATE_DETAILS_REQUEST","STATE_DETAILS_SUCCESS","STATE_DETAILS_FAIL","axios","listStates","dispatch","type","data","get","payload","error","message","response","listStateDetails","id"],"mappings":"AAAA,SACEA,kBADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,kBANF,QAOO,6BAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,aAAV,CAAvB;AAEAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,kBAAR;AAA4BW,MAAAA,OAAO,EAAEF;AAArC,KAAD,CAAR;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,eADC;AAEPU,MAAAA,OAAO,EACLC,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAArC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;AALL,KAAD,CAAR;AAOD;AACF,CAhBM;AAkBP,OAAO,MAAME,gBAAgB,GAAIC,EAAD,IAAQ,MAAOT,QAAP,IAAoB;AAC1D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,qBAAR;AAA+BS,MAAAA,OAAO,EAAE;AAAxC,KAAD,CAAR,CADE,CAGF;;AACA,UAAM;AAAEF,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAW,eAAcM,EAAG,EAA5B,CAAvB,CAJE,CAKF;AACA;AACA;;AAEAT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,qBAAR;AAA+BQ,MAAAA,OAAO,EAAEF;AAAxC,KAAD,CAAR;AACD,GAVD,CAUE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,kBADC;AAEPO,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAFtB,CAGP;AACA;AACA;;AALO,KAAD,CAAR;AAOD;AACF,CApBM","sourcesContent":["import {\n  STATE_LIST_REQUEST,\n  STATE_LIST_SUCCESS,\n  STATE_LIST_FAIL,\n  STATE_DETAILS_REQUEST,\n  STATE_DETAILS_SUCCESS,\n  STATE_DETAILS_FAIL,\n} from \"../constants/stateConstants\";\nimport axios from \"axios\";\n\nexport const listStates = () => async (dispatch) => {\n  try {\n    dispatch({ type: STATE_LIST_REQUEST });\n\n    const { data } = await axios.get(\"/api/states\");\n\n    dispatch({ type: STATE_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: STATE_LIST_FAIL,\n      payload:\n        error.message && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listStateDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: STATE_DETAILS_REQUEST, payload: {} });\n\n    // const { data } = await axios.get(\"/api/states\");\n    const { data } = await axios.get(`/api/states/${id}`);\n    // console.log(`the data is ${JSON.stringify(data)}`);\n    // console.log(`the data is ${data1.places}`);\n    // const data = data1;\n\n    dispatch({ type: STATE_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: STATE_DETAILS_FAIL,\n      payload: error.response.data.message,\n      // error.message && error.response.data.message\n      //   ? error.response.data.message\n      //   : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}